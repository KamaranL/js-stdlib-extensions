name: cicd

# NEEDS:
# - secrets.SSH_ID
# - secrets.SSH_ID_PUB
# - secrets.SSH_ALLOWED_SIGNERS
# - secrets.NPM_TOKEN

on:
  push:
    branches-ignore: main
    # test > update manifests
  pull_request:
    branches: main
    # test > update manifests > tag > release > npm package registry
  workflow_dispatch:
    # test > update manifests > tag > pre-release > npm package registry

concurrency: ${{ github.workflow }}

defaults:
  run:
    shell: bash

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - run: npm ci

      - run: npm run test

      - run: npm run build:docs

      - run: |
          source <(curl -s -H "Authorization: token $GH_TOKEN" 'https://gist.githubusercontent.com/KamaranL/a3e6bc50b52459b103f6b36ec3428f5d/raw/.action_profile')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        name: Set up environment

      - uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'

      - uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          configFilePath: '${{ env.GV_CONFIG }}'

      - run: bash $CI_SCRIPT
        name: Set CI vars

      - run: |
          echo "$CI_VERSION" >VERSION.txt
          npm version --quiet --allow-same-version --no-commit-hooks --no-git-tag-version "$CI_VERSION"
        name: Update manifests

      - run: |
          source $GH_RC

          git commit -a --amend --no-edit --date=now --trailer "skip-checks: true"

          [ $CI_CREATE_TAG ] && git tag -a v$CI_VERSION -m v$CI_VERSION $(git rev-parse HEAD) && core.set-env CI_CREATE_RELEASE "true"

          git push origin $(git rev-parse HEAD):$CI_BRANCH --force-with-lease
        name: Commit back to source

      - run: |
          source $GH_RC

          gh release create v$CI_VERSION --generate-notes --verify-tag && core.set-output CI_CD "true" && core.set-output CI_TAG "v$CI_VERSION"
        id: release
        if: env.CI_CREATE_RELEASE
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        name: Create release v${{ env.CI_VERSION }}

    outputs:
      cd: ${{ steps.release.outputs.CI_CD }}
      tag: ${{ steps.release.outputs.CI_TAG }}

  cd:
    needs: ci
    if: needs.ci.outputs.cd
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          persist-credentials: true
          ref: ${{ needs.ci.outputs.tag }}

      - run: npm ci

      - run: npm run compile

      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'
          registry-url: 'https://registry.npmjs.org'

      - run: |
          source <(curl -s -H "Authorization: token $GH_TOKEN" 'https://gist.githubusercontent.com/KamaranL/e0c9feb6f3bc2a296cef3258c5fdc184/raw/.actionrc')

          NPM_TOKEN=$(core.get-secret NPM.CICD)
          core.add-mask "$NPM_TOKEN"
          core.set-env NODE_AUTH_TOKEN "$NPM_TOKEN"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: npm publish
